{"version":3,"sources":["../../es6/observables/SubscribeOnObservable.js"],"names":[],"mappings":";;;;;;;;;;2BAAuB,eAAe;;;;kCACjB,wBAAwB;;;;6BACvB,mBAAmB;;;;IACpB,qBAAqB;cAArB,qBAAqB;;AAC3B,aADM,qBAAqB,CAC1B,MAAM,EAAuC;YAArC,SAAS,yDAAG,CAAC;YAAE,SAAS;;8BAD3B,qBAAqB;;AAElC,8BAAO,CAAC;AACR,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,YAAI,CAAC,2BAAU,SAAS,CAAC,IAAI,SAAS,GAAG,CAAC,EAAE;AACxC,gBAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACtB;AACD,YAAI,CAAC,SAAS,IAAI,OAAO,SAAS,CAAC,QAAQ,KAAK,UAAU,EAAE;AACxD,gBAAI,CAAC,SAAS,kCAAW,CAAC;SAC7B;KACJ;;;;AAZgB,yBAAqB,CAa/B,MAAM,GAAA,gBAAC,MAAM,EAAmC;YAAjC,KAAK,yDAAG,CAAC;YAAE,SAAS;;AACtC,eAAO,IAAI,qBAAqB,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;KAC9D;;AAfgB,yBAAqB,CAgB/B,QAAQ,GAAA,kBAAC,IAAsB,EAAE;YAAtB,MAAM,GAAR,IAAsB,CAApB,MAAM;YAAE,UAAU,GAApB,IAAsB,CAAZ,UAAU;;AAChC,eAAO,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;KACvC;;AAlBgB,yBAAqB,WAmBtC,UAAU,GAAA,oBAAC,UAAU,EAAE;AACnB,YAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;AAC7B,YAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,YAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACjC,kBAAU,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,QAAQ,EAAE,KAAK,EAAE;AACrE,kBAAM,EAAN,MAAM,EAAE,UAAU,EAAV,UAAU;SACrB,CAAC,CAAC,CAAC;KACP;;WA1BgB,qBAAqB;;;qBAArB,qBAAqB","file":"SubscribeOnObservable.js","sourcesContent":["import Observable from '../Observable';\nimport nextTick from '../schedulers/nextTick';\nimport isNumeric from '../util/isNumeric';\nexport default class SubscribeOnObservable extends Observable {\n    constructor(source, delayTime = 0, scheduler = nextTick) {\n        super();\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = nextTick;\n        }\n    }\n    static create(source, delay = 0, scheduler = nextTick) {\n        return new SubscribeOnObservable(source, delay, scheduler);\n    }\n    static dispatch({ source, subscriber }) {\n        return source.subscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        const delay = this.delayTime;\n        const source = this.source;\n        const scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source, subscriber\n        }));\n    }\n}\n//# sourceMappingURL=SubscribeOnObservable.js.map"]}