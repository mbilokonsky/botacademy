{"version":3,"sources":["../../es6/util/Immediate.js"],"names":[],"mappings":"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","file":"Immediate.js","sourcesContent":["/**\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\n*/\nimport { root } from './root';\nexport class ImmediateDefinition {\n    constructor(root) {\n        this.root = root;\n        if (root.setImmediate) {\n            this.setImmediate = root.setImmediate;\n            this.clearImmediate = root.clearImmediate;\n        }\n        else {\n            this.nextHandle = 1;\n            this.tasksByHandle = {};\n            this.currentlyRunningATask = false;\n            // Don't get fooled by e.g. browserify environments.\n            if (this.canUseProcessNextTick()) {\n                // For Node.js before 0.9\n                this.setImmediate = this.createProcessNextTickSetImmediate();\n            }\n            else if (this.canUsePostMessage()) {\n                // For non-IE10 modern browsers\n                this.setImmediate = this.createPostMessageSetImmediate();\n            }\n            else if (this.canUseMessageChannel()) {\n                // For web workers, where supported\n                this.setImmediate = this.createMessageChannelSetImmediate();\n            }\n            else if (this.canUseReadyStateChange()) {\n                // For IE 6â€“8\n                this.setImmediate = this.createReadyStateChangeSetImmediate();\n            }\n            else {\n                // For older browsers\n                this.setImmediate = this.createSetTimeoutSetImmediate();\n            }\n            let ci = function clearImmediate(handle) {\n                delete clearImmediate.instance.tasksByHandle[handle];\n            };\n            ci.instance = this;\n            this.clearImmediate = ci;\n        }\n    }\n    identify(o) {\n        return this.root.Object.prototype.toString.call(o);\n    }\n    canUseProcessNextTick() {\n        return this.identify(this.root.process) === '[object process]';\n    }\n    canUseMessageChannel() {\n        return Boolean(this.root.MessageChannel);\n    }\n    canUseReadyStateChange() {\n        const document = this.root.document;\n        return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n    }\n    canUsePostMessage() {\n        const root = this.root;\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `root.postMessage` means something completely different and can't be used for this purpose.\n        if (root.postMessage && !root.importScripts) {\n            let postMessageIsAsynchronous = true;\n            let oldOnMessage = root.onmessage;\n            root.onmessage = function () {\n                postMessageIsAsynchronous = false;\n            };\n            root.postMessage('', '*');\n            root.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n        return false;\n    }\n    // This function accepts the same arguments as setImmediate, but\n    // returns a function that requires no arguments.\n    partiallyApplied(handler, ...args) {\n        let fn = function result() {\n            const { handler, args } = result;\n            if (typeof handler === 'function') {\n                handler.apply(undefined, args);\n            }\n            else {\n                (new Function('' + handler))();\n            }\n        };\n        fn.handler = handler;\n        fn.args = args;\n        return fn;\n    }\n    addFromSetImmediateArguments(args) {\n        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n        return this.nextHandle++;\n    }\n    createProcessNextTickSetImmediate() {\n        let fn = function setImmediate() {\n            const named = setImmediate;\n            const { root, addFromSetImmediateArguments, partiallyApplied, runIfPresent } = named.instance;\n            let handle = addFromSetImmediateArguments(arguments);\n            root.process.nextTick(partiallyApplied(runIfPresent, handle));\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    }\n    createPostMessageSetImmediate() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n        const root = this.root;\n        const runIfPresent = this.runIfPresent;\n        let messagePrefix = 'setImmediate$' + root.Math.random() + '$';\n        let onGlobalMessage = function (event) {\n            if (event.source === root &&\n                typeof event.data === 'string' &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n        root.addEventListener('message', onGlobalMessage, false);\n        let fn = function setImmediate() {\n            const { messagePrefix, instance: { root, addFromSetImmediateArguments } } = setImmediate;\n            let handle = addFromSetImmediateArguments(arguments);\n            root.postMessage(messagePrefix + handle, '*');\n            return handle;\n        };\n        fn.instance = this;\n        fn.messagePrefix = messagePrefix;\n        return fn;\n    }\n    runIfPresent(handle) {\n        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (this.currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // 'too much recursion' error.\n            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n        }\n        else {\n            let task = this.tasksByHandle[handle];\n            if (task) {\n                this.currentlyRunningATask = true;\n                try {\n                    task();\n                }\n                finally {\n                    this.clearImmediate(handle);\n                    this.currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n    createMessageChannelSetImmediate() {\n        let channel = new this.root.MessageChannel();\n        channel.port1.onmessage = (event) => {\n            let handle = event.data;\n            this.runIfPresent(handle);\n        };\n        let fn = function setImmediate() {\n            const { channel, instance } = setImmediate;\n            let handle = instance.addFromSetImmediateArguments(arguments);\n            channel.port2.postMessage(handle);\n            return handle;\n        };\n        fn.channel = channel;\n        fn.instance = this;\n        return fn;\n    }\n    createReadyStateChangeSetImmediate() {\n        let fn = function setImmediate() {\n            const instance = setImmediate.instance;\n            const { root, runIfPresent, addFromSetImmediateArguments } = instance;\n            const doc = root.document;\n            const html = doc.documentElement;\n            let handle = addFromSetImmediateArguments(arguments);\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            let script = doc.createElement('script');\n            script.onreadystatechange = () => {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    }\n    createSetTimeoutSetImmediate() {\n        let fn = function setImmediate() {\n            const instance = setImmediate.instance;\n            const { runIfPresent, partiallyApplied, root } = instance;\n            let handle = instance.addFromSetImmediateArguments(arguments);\n            root.setTimeout(partiallyApplied(runIfPresent, handle), 0);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    }\n}\nexport const Immediate = new ImmediateDefinition(root);\n//# sourceMappingURL=Immediate.js.map"]}