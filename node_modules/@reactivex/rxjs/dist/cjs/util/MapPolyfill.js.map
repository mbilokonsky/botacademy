{"version":3,"sources":["../../es6/util/MapPolyfill.js"],"names":[],"mappings":";;;;;;IAAqB,WAAW;AACjB,aADM,WAAW,GACd;8BADG,WAAW;;AAExB,YAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACd,YAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAClB,YAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB;;;;AALgB,eAAW,WAM5B,GAAG,GAAA,aAAC,GAAG,EAAE;AACL,YAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAChC,eAAO,CAAC,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KACjD;;AATgB,eAAW,WAU5B,GAAG,GAAA,aAAC,GAAG,EAAE,KAAK,EAAE;AACZ,YAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAChC,YAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AACV,gBAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrB,gBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzB,gBAAI,CAAC,IAAI,EAAE,CAAC;SACf,MACI;AACD,gBAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;SAC3B;AACD,eAAO,IAAI,CAAC;KACf;;AArBgB,eAAW,uBAsBtB,iBAAC,GAAG,EAAE;AACR,YAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAChC,YAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AACV,mBAAO,KAAK,CAAC;SAChB;AACD,YAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,YAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxB,YAAI,CAAC,IAAI,EAAE,CAAC;AACZ,eAAO,IAAI,CAAC;KACf;;AA/BgB,eAAW,WAgC5B,OAAO,GAAA,iBAAC,EAAE,EAAE,OAAO,EAAE;AACjB,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAChC,cAAE,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD;KACJ;;WApCgB,WAAW;;;qBAAX,WAAW","file":"MapPolyfill.js","sourcesContent":["export default class MapPolyfill {\n    constructor() {\n        this.size = 0;\n        this._values = [];\n        this._keys = [];\n    }\n    get(key) {\n        let i = this._keys.indexOf(key);\n        return i === -1 ? undefined : this._values[i];\n    }\n    set(key, value) {\n        let i = this._keys.indexOf(key);\n        if (i === -1) {\n            this._keys.push(key);\n            this._values.push(value);\n            this.size++;\n        }\n        else {\n            this._values[i] = value;\n        }\n        return this;\n    }\n    delete(key) {\n        let i = this._keys.indexOf(key);\n        if (i === -1) {\n            return false;\n        }\n        this._values.splice(i, 1);\n        this._keys.splice(i, 1);\n        this.size--;\n        return true;\n    }\n    forEach(cb, thisArg) {\n        for (let i = 0; i < this.size; i++) {\n            cb.call(thisArg, this._values[i], this._keys[i]);\n        }\n    }\n}\n//# sourceMappingURL=MapPolyfill.js.map"]}